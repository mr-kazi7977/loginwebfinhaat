{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/angular-jwt\";\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\nexport let TokenStorageService = /*#__PURE__*/(() => {\n  class TokenStorageService {\n    constructor(jwtHelper) {\n      this.jwtHelper = jwtHelper;\n    }\n\n    signOut() {\n      window.sessionStorage.clear();\n    }\n\n    save(key, value) {\n      window.sessionStorage.removeItem(key);\n      window.sessionStorage.setItem(key, value);\n    }\n\n    remove(key) {\n      window.sessionStorage.removeItem(key);\n    }\n\n    get(key) {\n      return window.sessionStorage.getItem(key);\n    }\n\n    saveToken(token) {\n      window.sessionStorage.removeItem(TOKEN_KEY);\n      window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n\n    removeToken() {\n      window.sessionStorage.removeItem(TOKEN_KEY);\n    }\n\n    getToken() {\n      return window.sessionStorage.getItem(TOKEN_KEY);\n    }\n\n    saveUser(user) {\n      window.sessionStorage.removeItem(USER_KEY);\n      window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n\n    getUser() {\n      const user = window.sessionStorage.getItem(USER_KEY);\n\n      if (user) {\n        return JSON.parse(user);\n      }\n\n      return {};\n    }\n\n    isAuthenticated() {\n      return !this.jwtHelper.isTokenExpired(this.getToken());\n    }\n\n  }\n\n  TokenStorageService.ɵfac = function TokenStorageService_Factory(t) {\n    return new (t || TokenStorageService)(i0.ɵɵinject(i1.JwtHelperService));\n  };\n\n  TokenStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenStorageService,\n    factory: TokenStorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return TokenStorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}