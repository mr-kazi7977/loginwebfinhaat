{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { routes } from 'src/app/consts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/auth.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"src/app/service/token-storage.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/progress-bar\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\nimport * as i14 from \"@angular/material/checkbox\";\n\nfunction LoginFormComponent_mat_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-checkbox\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginFormComponent_mat_checkbox_0_Template_mat_checkbox_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.mobilelogin = $event);\n    });\n    i0.ɵɵtext(1, \"login with mobile\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.mobilelogin);\n  }\n}\n\nfunction LoginFormComponent_mat_progress_bar_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-bar\", 16);\n  }\n}\n\nfunction LoginFormComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵlistener(\"click\", function LoginFormComponent_mat_option_8_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.mobileLoginUncheck());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", data_r9.userTypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", data_r9.userTypeName, \" \");\n  }\n}\n\nfunction LoginFormComponent_mat_form_field_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 18)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"OTP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 19);\n    i0.ɵɵelementStart(4, \"mat-icon\", 10);\n    i0.ɵɵtext(5, \"vpn_key\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-hint\");\n    i0.ɵɵtext(7, \"Enter OTP Sent on Mobile Number\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction LoginFormComponent_button_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function LoginFormComponent_button_27_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.sendOTP());\n    });\n    i0.ɵɵtext(1, \"Send OTP\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r4.loginForm.valid);\n  }\n}\n\nfunction LoginFormComponent_button_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function LoginFormComponent_button_28_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.verifyOTP());\n    });\n    i0.ɵɵtext(1, \"Verify\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r5.loginForm.valid);\n  }\n}\n\nfunction LoginFormComponent_button_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function LoginFormComponent_button_29_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.login());\n    });\n    i0.ɵɵtext(1, \"Login\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginFormComponent = /*#__PURE__*/(() => {\n  class LoginFormComponent {\n    constructor(router, authService, toastrService, tokenStorage) {\n      this.router = router;\n      this.authService = authService;\n      this.toastrService = toastrService;\n      this.tokenStorage = tokenStorage;\n      this.sendLoginForm = new EventEmitter();\n      this.showOTP = false;\n      this.loading = false;\n      this.mobilelogin = true;\n      this.loginModel = new loginModel();\n      this.routers = routes;\n      this.menuData = [];\n      this.userTypeList = [{\n        userTypeId: 'PU',\n        userTypeName: 'PARTNER'\n      }, {\n        userTypeId: 'PO',\n        userTypeName: 'POS'\n      }, {\n        userTypeId: 'FN',\n        userTypeName: 'FINHAAT'\n      }];\n      this.selected = \"PO\";\n      this.request = {};\n    }\n\n    ngOnInit() {\n      //   console.log(\"Encrypted Password\"+bcrypt.hashSync(\"123456\", 10));\n      //   bcrypt.compare(\"123456\", \"$2a$12$VHw6nTJH0PU3f9/oLseoCuLh4ll.wBszUsMcbE.knMgg.VMDvh2n.\").then((res) => {\n      //     console.log(res);\n      // });\n      this.loginForm = new UntypedFormGroup({\n        mobile: new UntypedFormControl(null, [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\n        otp: new UntypedFormControl(null, null),\n        userid: new UntypedFormControl(null),\n        password: new UntypedFormControl(null),\n        userType: new UntypedFormControl(null)\n      });\n    }\n\n    sendOTP() {\n      if (this.loginForm.valid) {\n        this.loading = true;\n        this.authService.post('auth/verifyLogin', this.loginForm.value).subscribe(data => {\n          this.loading = false;\n\n          if (data && data.errorCode == 100) {\n            this.toastrService.success(data.errorMessage, 'Message');\n            this.showOTP = true;\n            this.loginForm.controls['otp'].setValidators([Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{6}$\")]);\n            this.loginForm.controls['otp'].updateValueAndValidity();\n          } else {\n            this.toastrService.error(data.errorMessage, 'Message');\n          }\n        }); //this.router.navigate([this.routers.DASHBOARD]).then();\n      }\n    }\n\n    verifyOTP() {\n      if (this.loginForm.valid) {\n        this.loading = true;\n        if (this.mobilelogin) this.loginModel.mobilelogin = \"Y\";else this.loginModel.mobilelogin = \"N\";\n        this.loginModel.userId = this.loginForm.value.userid;\n        this.loginModel.password = this.loginForm.value.password;\n        this.loginModel.mobile = this.loginForm.value.mobile;\n        this.loginModel.usertype = this.selected;\n        this.loginModel.otp = this.loginForm.value.otp;\n        console.log(this.loginModel);\n        this.authService.post('auth/verifyLoginOTP', this.loginModel).subscribe(data => {\n          this.loading = false;\n          console.log(\"Received:\" + data + \"LoggedIN:\" + data[\"loggedIn\"] + \"--\" + data.errorCode);\n\n          if (data && data.errorCode == 100) {\n            this.toastrService.success(data.errorMessage, 'Message');\n            this.showOTP = true;\n            console.log(JSON.stringify(data));\n\n            if (data[\"loggedIn\"]) {\n              this.tokenStorage.saveToken(data[\"jwttoken\"]);\n              this.request.mobile = data.mobile;\n              this.tokenStorage.saveUser(data); //   this.authService.getPosRegStatusById('registration/posregstatus',this.tokenStorage.getUser().registrationId).subscribe({\n              //     next: data => {\n              //       console.log(\"data.kycdocsubmit:\"+data.kycdocsubmit);\n              //                       if(data.kycdocsubmit=='S'&& data.bankdocsubmit=='S')\n              //                       {\n              //                       this.router.navigate([this.routers.DASHINDEX]).then();\n              //                       }else{\n              //                           this.authService.getUserInfoById('registration/getUserInfo',this.tokenStorage.getUser().registrationId).subscribe({\n              //                               next: data => {\n              //                                 this.tokenStorage.saveUser(data);\n              //                                   this.router.navigate([this.routers.DASHBOARD]).then();\n              //                               }\n              //                           });\n              //               }\n              //     }\n              // });\n            } else {\n              this.showOTP = false;\n              this.toastrService.error(\"Error While Login\", 'Message');\n            }\n          } else {\n            this.showOTP = false;\n            this.toastrService.error(data.errorMessage, 'Message');\n          }\n        });\n      }\n    }\n\n    login() {\n      //alert(\"login\")\n      this.loading = true; // console.log(this.mobilelogin)\n\n      if (this.mobilelogin) this.loginModel.mobilelogin = \"Y\";else this.loginModel.mobilelogin = \"N\";\n      this.loginModel.userId = this.loginForm.value.userid;\n      this.loginModel.password = this.loginForm.value.password;\n      this.loginModel.mobile = this.loginForm.value.mobile;\n      this.loginModel.usertype = this.selected; // console.log(this.loginModel);\n\n      sessionStorage.setItem(\"usertype\", this.loginModel.usertype);\n      this.authService.post('auth/login', this.loginModel).subscribe(data => {\n        this.loading = false;\n        console.log(\"received:\" + JSON.stringify(data));\n        console.log(\"loggedIn:\" + data[\"loggedIn\"]); // this.tokenStorage.saveinSession(\"sessionuser\",data);\n\n        console.log(\"jwttoken:\" + data[\"jwttoken\"]);\n\n        if (data && data.errorCode == 100) {\n          this.toastrService.success(data.errorMessage, 'Message');\n\n          if (data[\"loggedIn\"]) {\n            this.tokenStorage.saveToken(data[\"jwttoken\"]);\n            this.request.mobile = data.mobile;\n            this.tokenStorage.saveUser(data);\n\n            if (this.selected == 'PO') {\n              this.router.navigate([this.routers.DASHBOARD]).then();\n            } else {\n              console.log(\"side bar\", data.menuRoute); // this.router.navigate([this.routers.OFFLINEPOLICYVIEW]).then();\n              // this.authService.get(\"registration/getMenu\").subscribe(data => {\n              //   console.log(\"data menu\"+data[0]?.menuRoute)\n              //   this.menuData=data;\n              //   this.router.navigate([data[0]?.menuRoute]).then();\n              // })\n            }\n          } else {\n            this.showOTP = false;\n            this.toastrService.error(\"Error While Login\", 'Message');\n          }\n        } else {\n          this.toastrService.error(data.errorMessage, 'Message');\n        }\n      }); //this.router.navigate([this.routers.DASHBOARD]).then();\n    }\n\n    mobileLoginUncheck() {\n      this.mobilelogin = false;\n    }\n\n  }\n\n  LoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n    return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.TokenStorageService));\n  };\n\n  LoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginFormComponent,\n    selectors: [[\"app-login-form\"]],\n    outputs: {\n      sendLoginForm: \"sendLoginForm\"\n    },\n    decls: 30,\n    vars: 12,\n    consts: [[\"class\", \"example-margin\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [1, \"form\", 3, \"formGroup\"], [\"mode\", \"indeterminate\", 4, \"ngIf\"], [\"appearance\", \"outline\"], [1, \"form-control\", 3, \"value\", \"valueChange\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\", 1, \"input-width\", 3, \"hidden\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"userid\", \"formControlName\", \"userid\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"password\", \"formControlName\", \"password\"], [\"type\", \"tel\", \"matInput\", \"\", \"placeholder\", \"Mobile Number\", \"formControlName\", \"mobile\", \"maxlength\", \"10\"], [\"matSuffix\", \"\"], [\"appearance\", \"outline\", \"class\", \"input-width\", 4, \"ngIf\"], [1, \"form-actions\"], [\"class\", \"form-actions__login\", \"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"form-actions__login\", \"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"click\", 4, \"ngIf\"], [1, \"example-margin\", 3, \"ngModel\", \"ngModelChange\"], [\"mode\", \"indeterminate\"], [3, \"value\", \"click\"], [\"appearance\", \"outline\", 1, \"input-width\"], [\"matInput\", \"\", \"placeholder\", \"OTP\", \"formControlName\", \"otp\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"form-actions__login\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"form-actions__login\", 3, \"click\"]],\n    template: function LoginFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LoginFormComponent_mat_checkbox_0_Template, 2, 1, \"mat-checkbox\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵtemplate(2, LoginFormComponent_mat_progress_bar_2_Template, 1, 0, \"mat-progress-bar\", 2);\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵelementStart(4, \"mat-form-field\", 3)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Login As\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-select\", 4);\n        i0.ɵɵlistener(\"valueChange\", function LoginFormComponent_Template_mat_select_valueChange_7_listener($event) {\n          return ctx.selected = $event;\n        });\n        i0.ɵɵtemplate(8, LoginFormComponent_mat_option_8_Template, 2, 2, \"mat-option\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 6)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"userid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 6)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 6)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Mobile Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 9);\n        i0.ɵɵelementStart(21, \"mat-icon\", 10);\n        i0.ɵɵtext(22, \"mobile_screen_share\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-hint\");\n        i0.ɵɵtext(24, \"Enter 10 Digit Number\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(25, LoginFormComponent_mat_form_field_25_Template, 8, 0, \"mat-form-field\", 11);\n        i0.ɵɵelementStart(26, \"div\", 12);\n        i0.ɵɵtemplate(27, LoginFormComponent_button_27_Template, 2, 1, \"button\", 13);\n        i0.ɵɵtemplate(28, LoginFormComponent_button_28_Template, 2, 1, \"button\", 13);\n        i0.ɵɵtemplate(29, LoginFormComponent_button_29_Template, 2, 0, \"button\", 14);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.selected == \"PO\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"value\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.userTypeList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.mobilelogin);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hidden\", ctx.mobilelogin);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hidden\", !ctx.mobilelogin);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.showOTP);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showOTP && ctx.mobilelogin);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showOTP && ctx.mobilelogin);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.mobilelogin);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i6.MatButton, i7.MatFormField, i7.MatHint, i7.MatLabel, i7.MatSuffix, i8.MatInput, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.MaxLengthValidator, i9.FormGroupDirective, i9.FormControlName, i9.NgModel, i10.MatIcon, i11.MatProgressBar, i12.MatSelect, i13.MatOption, i14.MatCheckbox],\n    styles: [\".form[_ngcontent-%COMP%]{width:100%}.form__input[_ngcontent-%COMP%]{width:100%;margin-top:6px}.form-actions[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.form-actions__login[_ngcontent-%COMP%]{margin-right:10px}.form-actions__forget[_ngcontent-%COMP%]{font-size:12px;font-weight:400;color:#536dfe}.input-width[_ngcontent-%COMP%]{width:90%}\"]\n  });\n  return LoginFormComponent;\n})();\nexport class loginModel {}","map":null,"metadata":{},"sourceType":"module"}