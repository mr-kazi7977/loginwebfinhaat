{"ast":null,"code":"// import { DatePipe } from '@angular/common';\n// import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n// import { MatDialog } from '@angular/material/dialog';\n// import { MatPaginator } from '@angular/material/paginator';\n// import { MatSort } from '@angular/material/sort';\n// import { MatTableDataSource } from '@angular/material/table';\n// import { ToastrService } from 'ngx-toastr';\n// import { AuthService } from 'src/app/service/auth.service';\n// import { environment } from 'src/environments/environment';\n// import { InsuredDetailsComponent } from '../../insured-details/insured-details.component';\n// import { PaymentReceiptComponent } from '../../payment-receipt/payment-receipt.component';\n// import jsPDF from 'jspdf';\n// import html2canvas from 'html2canvas';\n// import { Router } from '@angular/router';\n// import { routes } from 'src/app/consts/routes';\n// interface Food {\n//   value: string;\n//   viewValue: string;\n// }\n// @Component({\n//   selector: 'app-policydetail',\n//   templateUrl: './policydetail.component.html',\n//   styleUrls: ['./policydetail.component.css']\n// })\n// export class PolicydetailComponent implements OnInit {\n//   // selectpro: Object;\n//   selected='All';\n//   public routers: typeof routes = routes;\n//   userdata: any;\n//   constructor(private router: Router, private auth: AuthService, private toastrService: ToastrService, public dialog: MatDialog, public datepipe: DatePipe) { }\n//   openDialog(tdata: any) {\n//     // console.log(\"tdata\", tdata);\n//     const dialogRef = this.dialog.open(InsuredDetailsComponent, {\n//       data: tdata\n//     });\n//     dialogRef.afterClosed().subscribe(result => {\n//       // console.log('The dialog was closed' + result);\n//     });\n//   }\n//   ngOnInit(): void {\n//    // this.loginuser=localStorage.getItem(\"logtype\")\n//     //this.findinsured();\n//     this.getRelationship();\n//     this.getproduct();\n//     this.auth.getpartner().subscribe((res: any) => {\n//       // console.log(\"response\", res);\n//       this.scode = res[0].id;\n//       this.insudata = res;\n//       this.filterprod(res[0].id, true, 'company')\n//     })\n//   }\n//   maxdate=new Date();\n//   fildata: filterreqdata = new filterreqdata()\n//   filterreq() {\n//     // console.log(\"productcode\", this.fildata.productcode);\n//     //console.log(\"fildataModel\", this.fildata);\n//     let check = false;\n//     if (this.fildata.productcode == null || this.fildata.productcode == undefined) {\n//       this.toastrService.error('   Please Enter Product')\n//       return check = true;\n//     }\n//     if (this.fildata.serdate == null || this.fildata.serdate == undefined) {\n//       this.toastrService.error('   Please Enter Date')\n//       return check = true;\n//     }\n//     this.auth.getfilinsured(this.fildata).subscribe((res: any) => {\n//       // console.log(\"response\", {res});\n//       // this.insudata = res;\n//       this.dataSource = new MatTableDataSource<user>(res);\n//       this.dataSource.paginator = this.paginator;\n//       this.dataSource.sort = this.sort;\n//       // console.log(this.dataSource)\n//     })\n//   }\n// getUser(){\n// //console.log(this.fildata.companyid);\n//   this.auth.getuserList(this.fildata.companyid).subscribe((res: any) => {\n// //console.log(\"userdata\",res)\n//     this.userdata = res;\n//   })\n// }\n//   // @ViewChild('pdfTable')\n//   // pdfTable!: ElementRef;\n// loginuser:any;\n//   @ViewChild(MatSort) sort: MatSort;\n//   @ViewChild(MatPaginator) paginator: MatPaginator;\n//   displayedColumns: string[] = ['name', 'DOB', 'mobile', 'relation', 'createdat', 'Receipt', 'Download','ghc','gpa', 'insured', 'pay','concent','edit'];\n//   dataSource = new MatTableDataSource<user>();\n//   relationshipMap: Map<string, string> = new Map<string, string>();\n//   applyfilter(filtervalue: string) {\n//     this.dataSource.filter = filtervalue.trim().toLowerCase();\n//   }\n//   employeeInfoTable: user[];\n//   name: any\n//   usertype: any;\n//   insudata: any;\n//   SelectedDate: any;\n//   selectPartner: any;\n//   pcode;\n//   // findinsured() {\n//   //   this.usertype = localStorage.getItem(\"logtype\");\n//   // }\n//   valueChanged(dateRangeStart: any) {\n//     // this.SelectedDate=new Date();\n//     // console.log(dateRangeStart);\n//     this.fildata.serdate = this.datepipe.transform(dateRangeStart, 'yyyy-MM-dd');\n//     // console.log(\"currentdate\", start_date);\n//     // this.dataSource.filter = start_date.trim().toLowerCase();\n//   }\n//   scode: any;\n//   result(){\n//     this.fildata.userid=null;\n//   }\n//   filterprod(slecteddata: any, event: any, type: any) {\n//     //console.log(\"slecteddata\",slecteddata);\n//     if (event.isUserInput == true || event == true) {\n//       if (type.toLowerCase() == 'product') {\n//         this.fildata.productcode = slecteddata;\n//       }\n//       if (type.toLowerCase() == 'userid') {\n//         this.fildata.userid = slecteddata;\n//       }\n//       if (type.toLowerCase() == 'company') {\n//         this.fildata.companyid = slecteddata;\n//         this.auth.getproductbycompany(this.fildata.companyid).subscribe((res) => {\n//           // console.log(\"welcome to log\", res);\n//           this.selectpro = res\n//           this.pcode = res[0].productcode;\n//           this.fildata.productcode = res[0].productcode\n//         })\n//         this.getUser();\n//       }\n//     }\n//   }\n//   download(proposalId: any): void {\n//     // this.auth.get('download/abhicovernote/'+proposalId).subscribe(data=>{\n//     //   console.log(\"download cover note called\");\n//     // });\n//     const downloaUrl = \"download/abhicovernote\";\n//     const downloaUrl1 = `${environment.AUTH_API + downloaUrl}/${proposalId}`;\n//     window.open(downloaUrl1, '_blank');\n//   }\n//  ghcdoc(proposalId: any){\n//     const downloaUrl = \"ghcpdoc\";\n//     // 1669888013387\n//     const downloaUrl1 = `${environment.AUTH_API + downloaUrl}/${proposalId}`;\n//     window.open(downloaUrl1, '_blank');\n//   }\n//   gpadoc(proposalId: any){\n//     const downloaUrl = \"gpadoc\";\n//     // 1669888013387\n//     const downloaUrl1 = `${environment.AUTH_API + downloaUrl}/${proposalId}`;\n//     window.open(downloaUrl1, '_blank');\n//   }\n//   x=false;\n//   getRelationship(): void {\n//     this.auth.get(\"getrelationship\").subscribe(data => {\n//       //console.log(\"nomrelation--\" + JSON.stringify(data));\n//       let nmr: relationships[] = [];\n//       nmr = data;\n//       for (let index = 0; index <= nmr.length - 1; index++) {\n//         this.relationshipMap.set(nmr[index].rcode, nmr[index].rname);\n//       }\n//     })\n//   }\n//   payreceipt: any;\n//   receipt(proposal: any) {\n//     this.auth.get('getpayreceipt/' + proposal).subscribe((resp) => {\n//       this.payreceipt = resp;\n//       if (resp != null) {\n//         const downloaUrl = \"download/payreciep\";\n//         const downloaUrl1 = `${environment.AUTH_API + downloaUrl}/${proposal}`\n//         // console.log(downloaUrl1);\n//         window.open(downloaUrl1, '_blank');\n//       }\n//       else {\n//         this.toastrService.error('Payment not done yet');\n//       }\n//     })\n//   }\n//   proposalid: any;\n//   premium: premiumDetail = new premiumDetail();\n//   paylink(proposalid: any) {\n//     sessionStorage.setItem(\"proposalid\", proposalid)\n//     //  this.auth.get('getPremiumDetails/' + proposalid).subscribe((resp) => {\n//     //   this.premium = resp;\n//     //   console.log(\"premium\", this.premium);\n//     this.router.navigate([this.routers.DETAILS]).then();\n//     // })\n//   }\n//   productdata:any\n// getproduct() {\n//   return this.auth.getproduct().subscribe((res) => {\n//     // console.log(\"side bar to log\", res);\n//     this.productdata=res;\n//   });\n// }\n// editform(id:any){\n// //localStorage.setItem(\"id\", id)\n// this.router.navigate([this.routers.EDIT,id]).then();\n// }\n//   selectpro: any;\n//   selectProduct: any;\n// }\n// export interface user {\n//   proposalid: any;\n//   insuredname: string;\n//   insuredage: string;\n//   nomineedob: string;\n//   insuredmobile: string;\n//   insuredrelationfromprimary: string;\n//   nomineename: string;\n//   nomineeage: string;\n//   nomineerelationwithinsured: string;\n//   certificateNumber: any;\n// }\n// export class relationships {\n//   rcode: string;\n//   rname: string;\n// }\n// export class filterreqdata {\n//   productcode: any;\n//   serdate: any;\n//   companyid: any;\n//   userid:any\n// }\n// export class premiumDetail {\n//   basepremium: number;\n//   dateCreated: string;\n//   grosspremium: number;\n//   gst: number;\n//   id: number;\n//   ifscCode: string;\n//   instrumentDate: string;\n//   instrumentNumber: string;\n//   lastUpdated: string;\n//   netpremium: number;\n//   paymentGatewayName: string;\n//   quotationNo: string;\n//   requestid: number;\n//   sourceTxnId: number;\n//   status: string;\n//   terminalId: string\n// }","map":null,"metadata":{},"sourceType":"script"}