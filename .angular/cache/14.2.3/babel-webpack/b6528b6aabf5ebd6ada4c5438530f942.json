{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { routes } from 'src/app/consts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/auth.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"src/app/service/token-storage.service\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/progress-bar\";\n\nfunction LoginFormComponent_mat_progress_bar_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-bar\", 8);\n  }\n}\n\nfunction LoginFormComponent_mat_form_field_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 2)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"OTP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 9);\n    i0.ɵɵelementStart(4, \"mat-icon\", 4);\n    i0.ɵɵtext(5, \"vpn_key\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-hint\");\n    i0.ɵɵtext(7, \"Enter OTP Sent on Mobile Number\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction LoginFormComponent_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function LoginFormComponent_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.sendOTP());\n    });\n    i0.ɵɵtext(1, \"Send OTP\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.loginForm.valid);\n  }\n}\n\nfunction LoginFormComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function LoginFormComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.verifyOTP());\n    });\n    i0.ɵɵtext(1, \"Verify\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r3.loginForm.valid);\n  }\n}\n\nexport let LoginFormComponent = /*#__PURE__*/(() => {\n  class LoginFormComponent {\n    constructor(router, authService, toastrService, tokenStorage, SpinnerService) {\n      this.router = router;\n      this.authService = authService;\n      this.toastrService = toastrService;\n      this.tokenStorage = tokenStorage;\n      this.SpinnerService = SpinnerService;\n      this.sendLoginForm = new EventEmitter();\n      this.showOTP = false;\n      this.loading = false;\n      this.routers = routes;\n      this.request = {};\n    }\n\n    ngOnInit() {\n      this.loginForm = new FormGroup({\n        mobile: new FormControl(null, [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\n        otp: new FormControl(null, null)\n      });\n    }\n\n    sendOTP() {\n      if (this.loginForm.valid) {\n        this.loading = true;\n        this.tokenStorage.removeToken();\n        this.SpinnerService.show();\n        this.authService.get('auth/sendotp/' + this.loginForm.value.mobile).subscribe(data => {\n          this.SpinnerService.hide();\n          this.loading = false;\n\n          if (data && data.errorCode == 100) {\n            this.toastrService.success(data.errorMessage, 'Message');\n            this.showOTP = true;\n            this.loginForm.controls['otp'].setValidators([Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{6}$\")]);\n            this.loginForm.controls['otp'].updateValueAndValidity();\n          } else {\n            this.toastrService.error(data.errorMessage, 'Message');\n          }\n        });\n      }\n    }\n\n    verifyOTP() {\n      if (this.loginForm.valid) {\n        this.loading = true;\n        this.authService.post('auth/verifyLoginOTP', this.loginForm.value).subscribe(data => {\n          this.loading = false;\n\n          if (data && data.errorCode == 100) {\n            this.toastrService.success(data.errorMessage, 'Message');\n            this.showOTP = true;\n\n            if (data[\"loggedIn\"]) {\n              this.tokenStorage.saveToken(data[\"jwttoken\"]);\n              this.request.mobile = data.mobile; // this.authService.post('registration/getUserInfo',this.request).subscribe({\n              //     next: data => {\n\n              this.router.navigate([this.routers.CDOT]).then(); //     }\n              // });\n            } else {\n              this.showOTP = false;\n              this.toastrService.error(\"Error While Login\", 'Message');\n            }\n          } else {\n            this.showOTP = false;\n            this.toastrService.error(data.errorMessage, 'Message');\n          }\n        });\n      }\n    }\n\n  }\n\n  LoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n    return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.TokenStorageService), i0.ɵɵdirectiveInject(i5.NgxSpinnerService));\n  };\n\n  LoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginFormComponent,\n    selectors: [[\"app-login-form\"]],\n    outputs: {\n      sendLoginForm: \"sendLoginForm\"\n    },\n    decls: 15,\n    vars: 5,\n    consts: [[1, \"form\", 3, \"formGroup\"], [\"mode\", \"indeterminate\", 4, \"ngIf\"], [\"appearance\", \"outline\", 1, \"input-width\"], [\"type\", \"tel\", \"matInput\", \"\", \"placeholder\", \"Mobile Number\", \"maxlength\", \"10\", \"formControlName\", \"mobile\"], [\"matSuffix\", \"\"], [\"appearance\", \"outline\", \"class\", \"input-width\", 4, \"ngIf\"], [1, \"form-actions\"], [\"class\", \"form-actions__login\", \"mat-raised-button\", \"\", \"class\", \"button1\", \"type\", \"submit\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"mode\", \"indeterminate\"], [\"matInput\", \"\", \"placeholder\", \"OTP\", \"formControlName\", \"otp\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 1, \"button1\", 3, \"disabled\", \"click\"]],\n    template: function LoginFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵtemplate(1, LoginFormComponent_mat_progress_bar_1_Template, 1, 0, \"mat-progress-bar\", 1);\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelementStart(3, \"mat-form-field\", 2)(4, \"mat-label\");\n        i0.ɵɵtext(5, \" Registered Mobile Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementStart(7, \"mat-icon\", 4);\n        i0.ɵɵtext(8, \"mobile_screen_share\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-hint\");\n        i0.ɵɵtext(10, \"Enter 10 Digit Number\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, LoginFormComponent_mat_form_field_11_Template, 8, 0, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(12, \"div\", 6);\n        i0.ɵɵtemplate(13, LoginFormComponent_button_13_Template, 2, 1, \"button\", 7);\n        i0.ɵɵtemplate(14, LoginFormComponent_button_14_Template, 2, 1, \"button\", 7);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.showOTP);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showOTP);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showOTP);\n      }\n    },\n    dependencies: [i6.NgIf, i7.MatButton, i8.MatFormField, i8.MatHint, i8.MatLabel, i8.MatSuffix, i9.MatInput, i10.ɵNgNoValidate, i10.DefaultValueAccessor, i10.NgControlStatus, i10.NgControlStatusGroup, i10.MaxLengthValidator, i10.FormGroupDirective, i10.FormControlName, i11.MatIcon, i12.MatProgressBar],\n    styles: [\".form[_ngcontent-%COMP%]{width:100%}.form__input[_ngcontent-%COMP%]{width:100%;margin-top:6px}.form-actions[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.form-actions__login[_ngcontent-%COMP%]{margin-right:10px}.form-actions__forget[_ngcontent-%COMP%]{font-size:12px;font-weight:400;color:#536dfe}.input-width[_ngcontent-%COMP%]{width:100%}.button1[_ngcontent-%COMP%]{background-color:#2da44a;border:none;color:#fff;padding:8px 30px;text-align:center;text-decoration:none;display:inline-block;font-size:16px;margin:4px 2px;transition-duration:1s;cursor:pointer}.button1[_ngcontent-%COMP%]:hover{background-color:#2c3b97;color:#fff}\"]\n  });\n  return LoginFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}