{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet VehicleRegistryComponent = class VehicleRegistryComponent {\n  constructor(router, authService, toastrService, tokenStorage) {\n    this.router = router;\n    this.authService = authService;\n    this.toastrService = toastrService;\n    this.tokenStorage = tokenStorage;\n    this.sendLoginForm = new EventEmitter();\n    this.showOTP = false;\n    this.loading = false;\n    this.mobilelogin = true;\n    this.loginModel = new loginModel();\n    this.routers = routes;\n    this.menuData = [];\n    this.userTypeList = [{\n      userTypeId: 'PU',\n      userTypeName: 'PARTNER'\n    }, {\n      userTypeId: 'PO',\n      userTypeName: 'POS'\n    }, {\n      userTypeId: 'FN',\n      userTypeName: 'FINHAAT'\n    }];\n    this.selected = \"PO\";\n    this.request = {};\n  }\n\n  ngOnInit() {\n    //   console.log(\"Encrypted Password\"+bcrypt.hashSync(\"123456\", 10));\n    //   bcrypt.compare(\"123456\", \"$2a$12$VHw6nTJH0PU3f9/oLseoCuLh4ll.wBszUsMcbE.knMgg.VMDvh2n.\").then((res) => {\n    //     console.log(res);\n    // });\n    this.loginForm = new UntypedFormGroup({\n      mobile: new UntypedFormControl(null, [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\n      otp: new UntypedFormControl(null, null),\n      userid: new UntypedFormControl(null),\n      password: new UntypedFormControl(null),\n      userType: new UntypedFormControl(null)\n    });\n  }\n\n  sendOTP() {\n    if (this.loginForm.valid) {\n      this.loading = true;\n      this.authService.post('auth/verifyLogin', this.loginForm.value).subscribe(data => {\n        this.loading = false;\n\n        if (data && data.errorCode == 100) {\n          this.toastrService.success(data.errorMessage, 'Message');\n          this.showOTP = true;\n          this.loginForm.controls['otp'].setValidators([Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{6}$\")]);\n          this.loginForm.controls['otp'].updateValueAndValidity();\n        } else {\n          this.toastrService.error(data.errorMessage, 'Message');\n        }\n      }); //this.router.navigate([this.routers.DASHBOARD]).then();\n    }\n  }\n\n  verifyOTP() {\n    if (this.loginForm.valid) {\n      this.loading = true;\n      if (this.mobilelogin) this.loginModel.mobilelogin = \"Y\";else this.loginModel.mobilelogin = \"N\";\n      this.loginModel.userId = this.loginForm.value.userid;\n      this.loginModel.password = this.loginForm.value.password;\n      this.loginModel.mobile = this.loginForm.value.mobile;\n      this.loginModel.usertype = this.selected;\n      this.loginModel.otp = this.loginForm.value.otp;\n      console.log(this.loginModel);\n      this.authService.post('auth/verifyLoginOTP', this.loginModel).subscribe(data => {\n        this.loading = false;\n        console.log(\"Received:\" + data + \"LoggedIN:\" + data[\"loggedIn\"] + \"--\" + data.errorCode);\n\n        if (data && data.errorCode == 100) {\n          this.toastrService.success(data.errorMessage, 'Message');\n          this.showOTP = true;\n          console.log(JSON.stringify(data));\n\n          if (data[\"loggedIn\"]) {\n            this.tokenStorage.saveToken(data[\"jwttoken\"]);\n            this.request.mobile = data.mobile;\n            this.tokenStorage.saveUser(data); //   this.authService.getPosRegStatusById('registration/posregstatus',this.tokenStorage.getUser().registrationId).subscribe({\n            //     next: data => {\n            //       console.log(\"data.kycdocsubmit:\"+data.kycdocsubmit);\n            //                       if(data.kycdocsubmit=='S'&& data.bankdocsubmit=='S')\n            //                       {\n            //                       this.router.navigate([this.routers.DASHINDEX]).then();\n            //                       }else{\n            //                           this.authService.getUserInfoById('registration/getUserInfo',this.tokenStorage.getUser().registrationId).subscribe({\n            //                               next: data => {\n            //                                 this.tokenStorage.saveUser(data);\n            //                                   this.router.navigate([this.routers.DASHBOARD]).then();\n            //                               }\n            //                           });\n            //               }\n            //     }\n            // });\n          } else {\n            this.showOTP = false;\n            this.toastrService.error(\"Error While Login\", 'Message');\n          }\n        } else {\n          this.showOTP = false;\n          this.toastrService.error(data.errorMessage, 'Message');\n        }\n      });\n    }\n  }\n\n  login() {\n    this.loading = true;\n    this.router.navigate([this.routers.REGISTERNUMBER]).then(); //  if(this.mobilelogin)\n    //   this.loginModel.mobilelogin=\"Y\";\n    //   else\n    //   this.loginModel.mobilelogin=\"N\";\n    //   this.loginModel.userId=this.loginForm.value.userid;\n    //   this.loginModel.password=this.loginForm.value.password;\n    //   this.loginModel.mobile=this.loginForm.value.mobile;\n    //   this.loginModel.usertype=this.selected;\n    //   sessionStorage.setItem(\"usertype\", this.loginModel.usertype)\n    //   this.authService.post('auth/login', this.loginModel).subscribe(data => {\n    //     this.loading=false;\n    //     console.log(\"received:\"+JSON.stringify(data))\n    //     console.log(\"loggedIn:\"+data[\"loggedIn\"])\n    //     console.log(\"jwttoken:\"+data[\"jwttoken\"])\n    //     if(data && data.errorCode==100){\n    //       this.toastrService.success(data.errorMessage,'Message' );\n    //       if (data[\"loggedIn\"]) {\n    //         this.tokenStorage.saveToken(data[\"jwttoken\"]);\n    //         this.request.mobile=data.mobile;\n    //         this.tokenStorage.saveUser(data);\n    //         if(this.selected=='PO'){      \n    //                 this.router.navigate([this.routers.DASHBOARD]).then();\n    //         } else{\n    //           console.log(\"side bar\",data.menuRoute);\n    //           // this.router.navigate([this.routers.OFFLINEPOLICYVIEW]).then();\n    //           // this.authService.get(\"registration/getMenu\").subscribe(data => {\n    //           //   console.log(\"data menu\"+data[0]?.menuRoute)\n    //           //   this.menuData=data;\n    //           //   this.router.navigate([data[0]?.menuRoute]).then();\n    //           // })\n    //         }  \n    //     }else{\n    //       this.showOTP=false;\n    //       this.toastrService.error( \"Error While Login\",'Message');\n    //     }\n    //     }else{\n    //       this.toastrService.error( data.errorMessage,'Message');\n    //     }\n    //   })\n    //this.router.navigate([this.routers.DASHBOARD]).then();\n  }\n\n  mobileLoginUncheck() {\n    this.mobilelogin = false;\n  }\n\n};\n\n__decorate([Output()], VehicleRegistryComponent.prototype, \"sendLoginForm\", void 0);\n\nVehicleRegistryComponent = __decorate([Component({\n  selector: 'app-vehicle-registry',\n  templateUrl: './vehicle-registry.component.html',\n  styleUrls: ['./vehicle-registry.component.css']\n})], VehicleRegistryComponent);\nexport { VehicleRegistryComponent };\nexport class loginModel {}","map":null,"metadata":{},"sourceType":"module"}