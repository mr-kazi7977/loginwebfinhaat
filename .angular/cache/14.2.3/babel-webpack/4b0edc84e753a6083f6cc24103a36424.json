{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { NgZone } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, _ngZone) {\n      this.http = http;\n      this._ngZone = _ngZone;\n    }\n\n    getuser(managerId) {\n      throw new Error('Method not implemented.');\n    }\n\n    post(url, data) {\n      console.log(environment.AUTH_API + url);\n      console.log(data);\n      return this.http.post(environment.AUTH_API + url, data, httpOptions).pipe(map(user => {\n        return user;\n      })); // return this.http.post(`${environment.AUTH_API + url}`, data, httpOptions);\n    }\n\n    asyncpost(url, data) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const promise = new Promise((resolve, reject) => {\n          const apiURL = environment.AUTH_API + url;\n          this.http.post(apiURL, data).subscribe({\n            next: res => {\n              resolve(res);\n            },\n            error: err => {\n              reject(err);\n            },\n            complete: () => {\n              console.log('complete');\n            }\n          });\n        });\n        return promise;\n      });\n    }\n\n    updateuser(url, data, id) {\n      return this.http.post(`${environment.AUTH_API + url}/${id}`, data, httpOptions).pipe(map(user => {\n        return user;\n      }));\n    }\n\n    get(url) {\n      return this.http.get(environment.AUTH_API + url);\n    }\n\n    pospost(url, data) {\n      return this.http.post(environment.POS_API + url, data).pipe(map(user => {\n        return user;\n      }));\n    }\n\n    docPost(url, formData) {\n      console.log(formData);\n      return this.http.post(environment.AUTH_API + url, formData);\n    }\n\n    getKycById(url, id) {\n      console.log(`${environment.AUTH_API + url}/${id}`);\n      return this.http.get(`${environment.AUTH_API + url}/${id}`);\n    }\n\n    getuserList(data) {\n      return this.http.get(environment.AUTH_API + 'userList/' + data);\n    }\n\n    getproduct() {\n      return this.http.get(environment.AUTH_API + 'getproduct');\n    }\n\n    getproductlist() {\n      return this.http.get(environment.AUTH_API + 'getproductlist');\n    }\n\n    getRelationship() {\n      return this.http.get(environment.AUTH_API + 'getrelationship');\n    }\n\n    getinsured(user) {\n      return this.http.get(environment.AUTH_API + 'getinsured/' + user);\n    }\n\n    getcityById(id) {\n      console.log(`${environment.AUTH_API}/${id}`);\n      return this.http.get(`${environment.AUTH_API}${id}`);\n    }\n\n    Excelldata(url, stardate, partner) {\n      // return this.http.post<any>(`${environment.AUTH_API + url}/${stardate}/${partner}`);\n      return this.http.get(`${environment.AUTH_API + url}/${stardate}/${partner}`);\n    }\n\n    Exportexcelfile(data) {\n      return this.http.post(environment.AUTH_API + 'excel/export', data);\n    }\n\n    getpartner() {\n      return this.http.get(environment.AUTH_API + 'partnername');\n    }\n\n    getpartnerdata() {\n      return this.http.get(environment.AUTH_API + 'partnerdata');\n    }\n\n    getfilinsured(data) {\n      return this.http.post(environment.AUTH_API + 'getinsured', data);\n    }\n\n    getEditedData(url, id, data) {\n      return this.http.get(`${environment.AUTH_API + url}/${id}`, data);\n    }\n\n    getproductbycompany(companyid) {\n      return this.http.get(environment.AUTH_API + 'getproductbycomapny/' + companyid);\n    }\n\n    edituser(id, data) {\n      console.log(environment.AUTH_API);\n      console.log(data); // return this.http.post(`${environment.AUTH_API}/${url}/${id}`,data)\n\n      return this.http.post(environment.AUTH_API + 'editcoi/' + id, data); // return this.http.post(`${environment.AUTH_API + url}`, data, httpOptions);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i0.NgZone));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}